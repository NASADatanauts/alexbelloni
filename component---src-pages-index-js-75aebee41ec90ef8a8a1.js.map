{"version":3,"sources":["webpack:///../myecapsule/src/pages/index.js","webpack:///../myecapsule/.cache/public-page-renderer.js","webpack:///../myecapsule/.cache/public-page-renderer-prod.js","webpack:///../myecapsule/src/components/seo.js","webpack:///../myecapsule/.cache/gatsby-browser-entry.js","webpack:///../myecapsule/src/components/header.js","webpack:///../myecapsule/src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","getProject","title","description","link","a","createElement","href","target","rel","IndexPage","keywords","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","getMenuItem","gatsby_link_default","to","style","color","textDecoration","func","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","margin-top","margin-left","margin-right","Layout","gatsby_browser_entry_StaticQuery","Fragment","header","paddingTop","Date","getFullYear","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAIA,SAASQ,EAAWC,EAAOC,EAAaC,GACtC,OACEP,EAAAQ,EAAAC,cAAA,UACET,EAAAQ,EAAAC,cAAA,SACET,EAAAQ,EAAAC,cAAA,cAASJ,IAEXL,EAAAQ,EAAAC,cAAA,SACGH,EACDN,EAAAQ,EAAAC,cAAA,WACCF,GAAQP,EAAAQ,EAAAC,cAAA,SAAGT,EAAAQ,EAAAC,cAAA,KAAGC,KAAMH,EAAMI,OAAO,SAASC,IAAI,uBAAnC,WAyCLC,UAnCG,kBAChBb,EAAAQ,EAAAC,cAACP,EAAA,EAAD,KACEF,EAAAQ,EAAAC,cAACN,EAAA,EAAD,CAAKE,MAAM,OAAOS,SAAU,mCAC5Bd,EAAAQ,EAAAC,cAAA,qCACAT,EAAAQ,EAAAC,cAAA,UACGL,EACC,cACA,yDACA,4DACDA,EACC,SACA,oEACDA,EACC,0BACA,yCACA,iEACDA,EACC,4BADS,qUAKT,sDACDA,EACC,2BADS,oCAGT,gGC5CR,IAAsBW,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,mLCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMlB,cAAcmB,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,QAIrBX,EAAiBY,UAAY,CAC3BV,SAAUW,IAAUC,MAAM,CACxBR,SAAUO,IAAUE,OAAOC,aAC1BA,YAGUhB,6GCTf,SAASiB,EAAThB,GAA2D,IAA5Cf,EAA4Ce,EAA5Cf,YAAagC,EAA+BjB,EAA/BiB,KAAMC,EAAyBlB,EAAzBkB,KAAMzB,EAAmBO,EAAnBP,SAAUT,EAASgB,EAAThB,MACxCmC,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBrC,GAAekC,EAAKI,aAAatC,YAEzD,OACEuC,EAAArC,EAAAC,cAACqC,EAAAtC,EAAD,CACEuC,eAAgB,CACdT,QAEFjC,MAAOA,EACP2C,cAAa,QAAUR,EAAKI,aAAavC,MACzCkC,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS7C,GAEX,CACE8C,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS7C,GAEX,CACE4C,KAAI,sBACJC,QAASP,IAGVU,OACCvC,EAASwC,OAAS,EACd,CACEL,KAAI,WACJC,QAASpC,EAASyC,KAAT,OAEX,IAELF,OAAOd,KAKhBF,EAAImB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNzB,SAAU,GACVR,YAAW,IAGb+B,EAAIL,UAAY,CACd1B,YAAa2B,IAAUE,OACvBG,KAAML,IAAUE,OAChBI,KAAMN,IAAUwB,QAAQxB,IAAUyB,QAClC5C,SAAUmB,IAAUwB,QAAQxB,IAAUE,QACtC9B,MAAO4B,IAAUE,OAAOC,YAGXC,gXCtFTsB,UAAqBhC,IAAMiC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAvD,EAAAC,cAACkD,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEH,EAAMpB,MACLuB,EAAgBH,EAAMI,QAAUD,EAAgBH,EAAMI,OAAOxB,MAEtDoB,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMpB,KAAOoB,EAAMpB,KAAKA,KAAOuB,EAAgBH,EAAMI,OAAOxB,MAGvDqB,EAAAvD,EAAAC,cAAA,uCCrBf,SAAS4D,EAAYpB,EAAM1C,GACzB,OACEwD,EAAAvD,EAAAC,cAAC6D,EAAA9D,EAAD,CACA+D,GAAIhE,EACJiE,MAAO,CACLC,MAAK,QACLC,eAAc,SAGfzB,GDwCLY,EAAY7B,UAAY,CACtBU,KAAMT,IAAUyB,OAChBQ,MAAOjC,IAAUE,OAAOC,WACxB+B,OAAQlC,IAAU0C,KAClBP,SAAUnC,IAAU0C,MCnCtB,IAAMC,EAAS,SAAAvD,GAAA,IAAGwD,EAAHxD,EAAGwD,UAAH,OACbd,EAAAvD,EAAAC,cAAA,UACE+D,MAAO,CACLM,WAAY,UACZC,aAAY,YAGdhB,EAAAvD,EAAAC,cAAA,OACE+D,MAAO,CACLQ,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTnB,EAAAvD,EAAAC,cAAA,MAAI+D,MAAO,CAAEQ,OAAQ,IACnBjB,EAAAvD,EAAAC,cAAC6D,EAAA9D,EAAD,CACE+D,GAAG,IACHC,MAAO,CACLC,MAAK,QACLC,eAAc,SAGfG,IAGFd,EAAAvD,EAAAC,cAAA,OAAK+D,MAAO,CAACW,aAAa,SAClCd,EAAY,OAAQ,KA7BXN,EAAAvD,EAAAC,cAAA,QAAM+D,MAAO,CAACY,cAAc,OAAOC,eAAe,UA+B3DhB,EAAY,QAAS,YAGlBN,EAAAvD,EAAAC,cAAA,cAMJmE,EAAO5C,UAAY,CACjB6C,UAAW5C,IAAUE,QAGvByC,EAAOpB,aAAe,CACpBqB,UAAS,IAGID,QCrDTU,UAAS,SAAAjE,GAAA,IAAG+C,EAAH/C,EAAG+C,SAAH,OACbL,EAAAvD,EAAAC,cAAC8E,EAAD,CACErB,MAAK,YASLC,OAAQ,SAAAzB,GAAI,OACVqB,EAAAvD,EAAAC,cAAAsD,EAAAvD,EAAAgF,SAAA,KACEzB,EAAAvD,EAAAC,cAACgF,EAAD,CAAQZ,UAAWnC,EAAKF,KAAKI,aAAavC,QAC1C0D,EAAAvD,EAAAC,cAAA,OACE+D,MAAO,CACLQ,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPQ,WAAY,IAGd3B,EAAAvD,EAAAC,cAAA,YAAO2D,GACPL,EAAAvD,EAAAC,cAAA,wCACyB,IAAIkF,MAAOC,cADpC,oBAGE7B,EAAAvD,EAAAC,cAAA,KAAGC,KAAK,4BAAR,cAzBVgC,KAAAmD,MAiCFP,EAAOtD,UAAY,CACjBoC,SAAUnC,IAAU6D,KAAK1D,YAGZkD","file":"component---src-pages-index-js-75aebee41ec90ef8a8a1.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nfunction getProject(title, description, link) {\r\n  return (\r\n    <li>\r\n      <p>\r\n        <strong>{title}</strong>\r\n      </p>\r\n      <p>\r\n        {description}\r\n        <br/>\r\n        {link && <p><a href={link} target='_blank' rel=\"noopener noreferrer\">here</a></p>}\r\n      </p>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <p>My journey as a Datanaut</p>\r\n    <ul>\r\n      {getProject(\r\n        'Searchnauts',\r\n        \"NASA Datanauts' countries and cities around the world.\",\r\n        'https://nasadatanauts.github.io/alexbelloni/searchnauts/')}\r\n      {getProject(\r\n        'Hubbot',\r\n        \"Chatbot that searches for NASA APIs, according to your key word.\")}\r\n      {getProject(\r\n        'My Water-Cooler Meeting',\r\n        \"Speech about APIs by using my track 1.\",\r\n        'https://drive.google.com/open?id=0Bz94QYIr9g9FZDZ0R1QwREdfWXM')}\r\n      {getProject(\r\n        'Track 2: Orbital Dynamics',\r\n        `Contribution into that track (tasks 3 and 4 on 'Future Work' list).\r\n          My GMATUtil tool helps when doing Dan O'Neil's tutorial, \"Web Visualization of a Trajectory Generated from the General Mission Analysis Tool\", part 1.\r\n          That track creates a library of web-based resources for mission visualizations.`,\r\n        'https://1drv.ms/u/s!ApuCsfBpp_GZgpZuHC3XaDTdkjOc9Q')}\r\n      {getProject(\r\n        'Track 1: Intro to Coding', \r\n        `Tutorial: Make an API (lesson 2).`,\r\n        'https://nasadatanauts.github.io/alexbelloni/track1lesson2/index.html')}\r\n    </ul>\r\n    {/* <p>Now go build something great.</p>\r\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n      <Image />\r\n    </div>\r\n    <Link to=\"/page-2/\">Go to page 2</Link> */}\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nfunction getMenuItem(name, link){\r\n  return (\r\n    <Link\r\n    to={link}\r\n    style={{\r\n      color: `white`,\r\n      textDecoration: `none`,\r\n    }}\r\n  >\r\n    {name}\r\n  </Link>\r\n  )\r\n}\r\n\r\nfunction getSeparator(){\r\n  return (<span style={{'margin-left':'10px','margin-right':'10px'}}></span>)\r\n}\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: '#64c37d', //`rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n         <div style={{'margin-top':'10px'}}>\r\n{getMenuItem('home', '/')}\r\n{getSeparator()}\r\n{getMenuItem('about', '/about')}\r\n</div>\r\n    </div>\r\n    <div>\r\n\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © alexandre belloni . {new Date().getFullYear()} . built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}